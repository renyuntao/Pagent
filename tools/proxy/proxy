#!/usr/bin/env python3
# Function:
#   Run command and return result to client
#
# Date:
#   2019-01-25

import os
import sys
import datetime
from Ren.load import load
from Ren.proxy import verify, run

confDict = load()
separator1 = confDict['sep1'].encode()
separator2 = confDict['sep2']
maxRead = confDict['maxRead']

recvData = os.read(0, maxRead)
try:
	signature, message = recvData.split(separator1)
except ValueError:
	print("============ ERROR ============", file=sys.stderr)
	print("Split error with separator1.", file=sys.stderr)
	print("Data:", recvData, file=sys.stderr)
	print("===============================", file=sys.stderr)
	exit(1)

# Verify the signature
if not verify(signature, message):
	print("Vertify failed!")
	exit(1)

try:
	message = message.decode().strip()
	remoteTime = int(message.split(separator2)[0])
	argv = message.split(separator2)[1]

except ValueError:
	print("============ ERROR ============", file=sys.stderr)
	print("Split error with separator2.", file=sys.stderr)
	print("Message:", message, file=sys.stderr)
	print("===============================", file=sys.stderr)
	exit(1)

# Check Timestamp
localTime = int(datetime.datetime.now().strftime('%s'))
if abs(localTime - remoteTime) > int(confDict['maxTimeDiff']):
	print("WARNING: Exceed max time diff.", file=sys.stderr)
	print("localTime: {0}  remoteTime: {1}".format(localTime, remoteTime), file=sys.stderr)
	exit(1)

run(argv)
